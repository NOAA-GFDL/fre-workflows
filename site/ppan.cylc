
    [[root]]
        init-script = """
            module load ppan_environment
            module list
        """
        env-script = """
            eval $(rose task-env)
            env
        """
        script = rose task-run --verbose
        {# retries don't make sense yet while testing as they will just delay the failures #}
        {# execution retry delays = PT1M, PT5M, PT10M                                      #}
        # Set default time limit to 4 hours
        execution time limit = PT4H
        platform = ppan
        [[[events]]]
            mail events = startup shutdown aborted timeout stalled inactivity
            submission timeout = P1D
        [[[directives]]]
            --comment=xtmp,canopy
        [[[environment]]]
            COPY_TOOL=gcp

    [[STAGE-HISTORY]]
        pre-script = module load gcp/2.3 hsm/test

{% if DO_REFINEDIAG or DO_PREANALYSIS %}
    [[PRE-ANALYSIS]]
        pre-script = """
            env
            set -x
            module load gcp
            module load fre/canopy
            mkdir -p $work $tempCache $refineDiagDir
            hsmget -v -t -a $histDir -p {{ PTMP_DIR }}/$histDir -w $work $hsmdate/\*
            cd $work/$hsmdate
            ls
        """
{% endif %}

{% if DO_REFINEDIAG %}
    [[REFINE-DIAG]]
        post-script = """
            cd $refineDiagDir
            if ls *nc; then
                refinedCount=$(ls -1 *nc | wc -l)
            else
                refinedCount=0
            fi
            if [[ $refinedCount > 0 ]]; then
                for file in $(ls -1 *nc); do
                    list_ncvars.csh -st01234 $file |& tee $CYLC_WORKFLOW_SHARE_DIR/refineDiag.log
                done
            else
                echo ERROR: RefineDiag script did not create any NetCDF files as it was expected to do
                exit 1
            fi
            if [[ -f {{ HISTORY_DIR_REFINED }}/$oname.nc.tar ]]; then
                echo "the contents of {{ PTMP_DIR }}/{{ HISTORY_DIR_REFINED }} is..."
                ls {{ PTMP_DIR }}/{{ HISTORY_DIR_REFINED }}
                echo "the contents of {{ PTMP_DIR }}/{{ HISTORY_DIR_REFINED }}/$oname.nc is..."
                ls {{ PTMP_DIR }}/{{ HISTORY_DIR_REFINED }}/$oname.nc
                hsmget -v -t -a {{ HISTORY_DIR_REFINED }} -p {{ PTMP_DIR }}/{{ HISTORY_DIR_REFINED }} -w $TMPDIR/modify_refineDiag $hsmdate/\*
                mv -f * $TMPDIR/modify_refineDiag
                mv -f $TMPDIR/modify_refineDiag/* .
                rm -rf $TMPDIR/modify_refineDiag
            fi
            hsmput -v -t -s tar -a {{ HISTORY_DIR_REFINED }} -p {{ PTMP_DIR }}/{{ HISTORY_DIR_REFINED }} -w $TMPDIR/history_refineDiag $hsmdate
        """
{% endif %}

    [[SPLIT-NETCDF]]
        pre-script = module load cdo nco && mkdir -p $outputDir

    [[RENAME-SPLIT-TO-PP]]
        pre-script = module load netcdf-c cdo && mkdir -p $outputDir

    [[REMAP-PP-COMPONENTS]]
        pre-script = """
            module load fre-nctools miniforge
            set +u
            conda activate /nbhome/fms/conda/envs/fre-cli
            set -u
            module load gcp
            mkdir -p $outputDir
        """

    [[data-catalog]]
        pre-script = module load fre/canopy 
        
        [[[directives]]]
            --partition=analysis

    [[MAKE-TIMESERIES]]
        pre-script = module load cdo && mkdir -p $outputDir

    [[MAKE-TIMEAVGS]]
        pre-script = module load fre-python-tools && mkdir -p $outputDir

    [[COMBINE-TIMEAVGS]]
        pre-script = module load cdo nco && mkdir -p $outputDir

{% if DO_REGRID %}
    [[REGRID-XY]]
        pre-script = """
            module load fre-nctools miniforge
            set +u
            conda activate /nbhome/fms/conda/envs/fre-cli
            set -u
            mkdir -p $outputDir
        """
{% endif %}

    [[MASK-ATMOS-PLEVEL]]
        pre-script = module load python/3.9

    [[CLEAN]]
        pre-script = "set -x"
		

{% if DO_MDTF %}
    [[mdtf]]
        pre-script = mkdir -p $MDTF_TMPDIR
        [[[environment]]]
            MDTF_TMPDIR = $CYLC_WORKFLOW_SHARE_DIR/mdtf
{% endif %}

{% if DO_STATICS %}
    [[combine-statics]]
        pre-script = module load cdo && mkdir -p $outputDir
{% endif %}

# workaround to run Ray's analysis example on the analysis partition as it uses his /net2
[[analysis-ray_example]]
    [[[directives]]]
    --partition=analysis

